import { AfterViewInit, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import type { Container, Engine } from '@tsparticles/engine';
import { IParticlesProps } from './ng-particles.module';
import { NgParticlesService } from './ng-particles.service';
import * as i0 from "@angular/core";
export declare class NgxParticlesComponent implements OnInit, AfterViewInit, OnDestroy {
    protected platformId: string;
    private readonly particlesService;
    options?: IParticlesProps;
    url?: string;
    id: string;
    particlesInit?: (engine: Engine) => Promise<void>;
    particlesLoaded: EventEmitter<Container>;
    private subscription?;
    private destroy$;
    private container?;
    constructor(platformId: string, particlesService: NgParticlesService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private loadParticles;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxParticlesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxParticlesComponent, "ngx-particles", never, { "options": { "alias": "options"; "required": false; }; "url": { "alias": "url"; "required": false; }; "id": { "alias": "id"; "required": false; }; "particlesInit": { "alias": "particlesInit"; "required": false; }; }, { "particlesLoaded": "particlesLoaded"; }, never, never, false, never>;
}
